version: "3.9"

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: language_learning
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ..
    env_file:
      - ../.env
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/docs"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/language_learning
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      RUN_MIGRATIONS: "1"
    command: uvicorn app.main:create_app --factory --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ..:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery-worker:
    build:
      context: ..
    env_file:
      - ../.env
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/language_learning
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    command: celery -A app.celery_app worker --loglevel=info --concurrency=2
    volumes:
      - ..:/app
    depends_on:
      api:
        condition: service_healthy # Warten, bis die API bereit ist


  celery-beat:
    build:
      context: ..
    env_file:
      - ../.env
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/language_learning
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    command: celery -A app.celery_app beat --loglevel=info
    volumes:
      - ..:/app
    depends_on:
      api:
        condition: service_healthy # Warten, bis die API bereit ist

  flower:
    build:
      context: ..
    env_file:
      - ../.env
    environment:
      CELERY_BROKER_URL: redis://redis:6379/1
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    command: celery -A app.celery_app flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      api:
        condition: service_healthy # Warten, bis die API bereit ist

volumes:
  pg_data:
